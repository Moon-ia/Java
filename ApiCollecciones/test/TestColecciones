package test;

import java.util.*;

public class TestColecciones {
    public static void main(String[] args) {
        //guarda un orden y muestra elemetos duplicados
        List miLista = new ArrayList();
        miLista.add("Lunes");
        miLista.add("Martes");
        miLista.add("Miercoles");
        miLista.add("Jueves");
        miLista.add("Viernes");
        imprimir(miLista);
        //for(Object elemento: miLista){
        //    System.out.println("elemento = " + elemento);
        //}
        //se puede usar de las dos formas ya que muestra lo mismo
        
        //miLista.forEach(elemento -> {
        //    System.out.println("elemento = " + elemento);
        //});
        
        //set no tiene un orden al mostrar y no muestra elementos duplicados
        Set miSet = new HashSet();
        miSet.add("Lunes");
        miSet.add("Martes");
        miSet.add("Miercoles");
        miSet.add("Jueves");
        miSet.add("Viernes");
        imprimir(miSet);
        
        Map miMapa = new HashMap();
        miMapa.put("Valor1", "Juan");
        miMapa.put("Valor2", "Karla");
        miMapa.put("Valor3", "Rosario");
        //para mostrar una sola llave
        String elemento = (String) miMapa.get("Valo1");
        System.out.println("elemento = " + elemento);
        //para mostrar todas las llaves
        imprimir(miMapa.keySet());
        //para mostrar todos los valores
        imprimir(miMapa.values());
        
    }
    
    //aplicando polimorfismo, para evitar escribir siempre lo mismo para mostrar
    public static void imprimir(Collection coleccion){
        coleccion.forEach(elemento -> {
            System.out.println("elemento = " + elemento);
        });
        //for(Object elemento: coleccion){
        //    System.out.println("elemento = " + elemento);
        //}
    }
}
